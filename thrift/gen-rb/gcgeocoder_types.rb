#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


module GeocommonsGeocoderThrift
    module PrecisionType
      CITY = 1
      ZIP = 2
      STREET = 3
      INTERSECTION = 4
      RANGE = 5
      VALUE_MAP = {1 => "CITY", 2 => "ZIP", 3 => "STREET", 4 => "INTERSECTION", 5 => "RANGE"}
      VALID_VALUES = Set.new([CITY, ZIP, STREET, INTERSECTION, RANGE]).freeze
    end

    class GeocodeResult
      include ::Thrift::Struct
      ADDRESS = 1
      LON = 2
      LAT = 3
      PRECISION = 4
      SCORE = 5

      ::Thrift::Struct.field_accessor self, :address, :lon, :lat, :precision, :score
      FIELDS = {
        ADDRESS => {:type => ::Thrift::Types::MAP, :name => 'address', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
        LON => {:type => ::Thrift::Types::DOUBLE, :name => 'lon'},
        LAT => {:type => ::Thrift::Types::DOUBLE, :name => 'lat'},
        PRECISION => {:type => ::Thrift::Types::I32, :name => 'precision', :enum_class => GeocommonsGeocoderThrift::PrecisionType},
        SCORE => {:type => ::Thrift::Types::DOUBLE, :name => 'score'}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @precision.nil? || GeocommonsGeocoderThrift::PrecisionType::VALID_VALUES.include?(@precision)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field precision!')
        end
      end

    end

    class GeocodeResults
      include ::Thrift::Struct
      RESULTS = 1

      ::Thrift::Struct.field_accessor self, :results
      FIELDS = {
        RESULTS => {:type => ::Thrift::Types::LIST, :name => 'results', :element => {:type => ::Thrift::Types::STRUCT, :class => GeocommonsGeocoderThrift::GeocodeResult}}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

  end
